"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7738],{21694:function(t,r,e){e.d(r,{S:function(){return s}});var a=e(23437),n=e(9754);class s{get chainId(){return this._chainId}constructor(t,r,e){this.contractWrapper=t,this.storage=r,this.erc1155=new n.E(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async get(t){return this.erc1155.get(t)}async totalSupply(t){return this.erc1155.totalSupply(t)}async balanceOf(t,r){return this.erc1155.balanceOf(t,r)}async balance(t){return this.erc1155.balance(t)}async isApproved(t,r){return this.erc1155.isApproved(t,r)}transfer=(0,a.f)((()=>{var t=this;return async function(r,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];return t.erc1155.transfer.prepare(r,e,a,n)}})());transferBatch=(0,a.f)((()=>{var t=this;return async function(r,e,a,n){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0];return t.erc1155.transferBatch.prepare(r,e,a,n,s)}})());setApprovalForAll=(0,a.f)(async(t,r)=>this.erc1155.setApprovalForAll.prepare(t,r));airdrop=(0,a.f)((()=>{var t=this;return async function(r,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];return t.erc1155.airdrop.prepare(r,e,a,n)}})())}},89276:function(t,r,e){e.d(r,{h:function(){return n}});var a=e(2515);async function n(t,r,n){let s=t.getProvider(),o=(await Promise.resolve().then(e.t.bind(e,49242,19))).default,i=new a.cs(s,r,o,{},t.storage),c=await t.getSignerAddress(),d=t.address,p=await i.read("allowance",[c,d]);return p.gte(n)}},63813:function(t,r,e){e.d(r,{a:function(){return h},g:function(){return g},h:function(){return p},i:function(){return d},m:function(){return u},v:function(){return l}});var a=e(64146),n=e(2593),s=e(38776),o=e(2840),i=e(2515),c=e(43277);async function d(t,r,n,s,i){try{let c=(await e.e(5025).then(e.t.bind(e,25025,19))).default,d=new a.CH(n,c,t),[p,l]=await Promise.all([d.supportsInterface(o.I),d.supportsInterface(o.a)]);if(p){let o;let c=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,d=new a.CH(n,c,t),p=await d.isApprovedForAll(i,r);if(p)return!0;try{o=await d.getApproved(s)}catch(t){}return o?.toLowerCase()===r.toLowerCase()}if(!l)return console.error("Contract does not implement ERC 1155 or ERC 721."),!1;{let s=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,o=new a.CH(n,s,t);return await o.isApprovedForAll(i,r)}}catch(t){return console.error("Failed to check if token is approved",t),!1}}async function p(t,r,a,n,s){let c=(await e.e(5025).then(e.t.bind(e,25025,19))).default,d=new i.cs(t.getSignerOrProvider(),a,c,t.options,t.storage),[p,l]=await Promise.all([d.read("supportsInterface",[o.I]),d.read("supportsInterface",[o.a])]);if(p){let o=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,c=new i.cs(t.getSignerOrProvider(),a,o,t.options,t.storage),d=await c.read("isApprovedForAll",[s,r]);if(!d){let t=(await c.read("getApproved",[n])).toLowerCase()===r.toLowerCase();t||await c.sendTransaction("setApprovalForAll",[r,!0])}}else if(l){let n=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,o=new i.cs(t.getSignerOrProvider(),a,n,t.options,t.storage),c=await o.read("isApprovedForAll",[s,r]);c||await o.sendTransaction("setApprovalForAll",[r,!0])}else throw Error("Contract must implement ERC 1155 or ERC 721.")}function l(t){(0,s.Z)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,s.Z)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,s.Z)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,s.Z)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,s.Z)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,s.Z)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type&&(0,s.Z)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function u(t,r,e){return{quantity:e.quantityDesired,pricePerToken:e.pricePerToken,currencyContractAddress:e.currency,buyerAddress:e.offeror,quantityDesired:e.quantityWanted,currencyValue:await (0,c.a)(t,e.currency,e.quantityWanted.mul(e.pricePerToken)),listingId:r}}function h(t,r,e){if(e=n.O$.from(e),t=n.O$.from(t),r=n.O$.from(r),t.eq(n.O$.from(0)))return!1;let a=r.sub(t).mul(i.dE).div(t);return a.gte(e)}async function g(t,r,e){let a=[];for(;r-t>o.D;)a.push(e(t,t+o.D-1)),t+=o.D;return a.push(e(t,r-1)),await Promise.all(a)}},37738:function(t,r,e){e.r(r),e.d(r,{Pack:function(){return L}});var a=e(2593),n=e(61744),s=e(9279),o=e(43277),i=e(89276),c=e(99979),d=e(2515),p=e(86407),l=e(21919),u=e(63813),h=e(2840),g=e(23437),f=e(72555),w=e(88309),k=e(82123),v=e(21694),y=e(27761),m=e(27715),A=e(17736),P=e(1604);let W=P.z.object({contractAddress:d.b9}),C=W.extend({quantity:d.cw}),I=W.extend({tokenId:d.b6}),b=W.extend({tokenId:d.b6,quantity:d.b6}),R=C.omit({quantity:!0}).extend({quantityPerReward:d.cw}),S=b.omit({quantity:!0}).extend({quantityPerReward:d.b6}),T=R.extend({totalRewards:d.b6.default("1")}),O=S.extend({totalRewards:d.b6.default("1")}),q=P.z.object({erc20Rewards:P.z.array(T).default([]),erc721Rewards:P.z.array(I).default([]),erc1155Rewards:P.z.array(O).default([])}),E=q.extend({packMetadata:A.N,rewardsPerPack:d.b6.default("1"),openStartTime:p.R.default(new Date)});e(13550),e(77191),e(54146),e(64063);class ${featureName=d.dK.name;constructor(t,r,e,a,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new d.cs(t,r,y,a,e);this.contractWrapper=s,this.storage=e,this.chainId=n,this.events=new l.a(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}open=(0,g.f)((()=>{var t=this;return async function(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;return g.T.fromContractWrapper({contractWrapper:t.contractWrapper,method:"openPack",args:[r,e],overrides:{gasLimit:n},parse:r=>{let e=a.O$.from(0);try{let a=t.contractWrapper.parseLogs("PackOpenRequested",r?.logs);e=a[0].args.requestId}catch(t){}return{receipt:r,id:e}}})}})());claimRewards=(0,g.f)((()=>{var t=this;return async function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e5;return g.T.fromContractWrapper({contractWrapper:t.contractWrapper,method:"claimRewards",args:[],overrides:{gasLimit:r},parse:async r=>{let e=t.contractWrapper.parseLogs("PackOpened",r?.logs);if(0===e.length)throw Error("PackOpened event not found");let a=e[0].args.rewardUnitsDistributed;return await t.parseRewards(a)}})}})());async parseRewards(t){let r=[],e=[],a=[];for(let s of t)switch(s.tokenType){case 0:{let t=await (0,o.f)(this.contractWrapper.getProvider(),s.assetContract);r.push({contractAddress:s.assetContract,quantityPerReward:n.formatUnits(s.totalAmount,t.decimals).toString()});break}case 1:e.push({contractAddress:s.assetContract,tokenId:s.tokenId.toString()});break;case 2:a.push({contractAddress:s.assetContract,tokenId:s.tokenId.toString(),quantityPerReward:s.totalAmount.toString()})}return{erc20Rewards:r,erc721Rewards:e,erc1155Rewards:a}}async addPackOpenEventListener(t){return this.events.addEventListener("PackOpened",async r=>{t(r.data.packId.toString(),r.data.opener,await this.parseRewards(r.data.rewardUnitsDistributed))})}async canClaimRewards(t){let r=await (0,d.aL)(t||await this.contractWrapper.getSignerAddress());return await this.contractWrapper.read("canClaimRewards",[r])}async openAndClaim(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5,n=await this.contractWrapper.sendTransaction("openPackAndClaimRewards",[t,r,e],{gasLimit:a.O$.from(5e5)}),s=a.O$.from(0);try{let t=this.contractWrapper.parseLogs("PackOpenRequested",n?.logs);s=t[0].args.requestId}catch(t){}return{receipt:n,id:s}}async getLinkBalance(){let t=(await Promise.resolve().then(e.t.bind(e,49242,19))).default;return this.getLinkContract(t).balanceOf(this.contractWrapper.address)}async transferLink(t){let r=(await Promise.resolve().then(e.t.bind(e,49242,19))).default;await this.getLinkContract(r).transfer(this.contractWrapper.address,t)}getLinkContract(t){let r=d.aY[this.chainId];if(!r)throw Error(`No LINK token address found for chainId ${this.chainId}`);let e=new d.cs(this.contractWrapper.getSignerOrProvider(),r,t,this.contractWrapper.options,this.storage);return new m.E(e,this.storage,this.chainId)}}class L extends v.S{static contractRoles=d.dL;get vrf(){return(0,p.a)(this._vrf,d.dK)}constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new d.cs(t,r,n,a.gasless&&"openzeppelin"in a.gasless?{...a,gasless:{...a.gasless,openzeppelin:{...a.gasless.openzeppelin,useEOAForwarder:!0}}}:a,e);super(i,e,s),this.abi=d.bj.parse(n||[]),this.metadata=new l.C(this.contractWrapper,d.c3,this.storage),this.app=new l.b(this.contractWrapper,this.metadata,this.storage),this.roles=new k.C(this.contractWrapper,L.contractRoles),this.royalties=new w.C(this.contractWrapper,this.metadata),this.encoder=new o.C(this.contractWrapper),this.estimator=new l.G(this.contractWrapper),this.events=new l.a(this.contractWrapper),this.interceptor=new f.C(this.contractWrapper),this.owner=new w.a(this.contractWrapper),this._vrf=this.detectVrf()}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t),this._vrf?.onNetworkUpdated(t)}getAddress(){return this.contractWrapper.address}async get(t){return this.erc1155.get(t)}async getAll(t){return this.erc1155.getAll(t)}async getOwned(t){return this.erc1155.getOwned(t)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){let t=await this.contractWrapper.read("hasRole",[(0,d.H)("transfer"),s.d]);return!t}async getPackContents(t){let{contents:r,perUnitAmounts:e}=await this.contractWrapper.read("getPackContents",[t]),s=[],i=[],c=[];for(let t=0;t<r.length;t++){let d=r[t],p=e[t];switch(d.tokenType){case 0:{let t=await (0,o.f)(this.contractWrapper.getProvider(),d.assetContract),r=n.formatUnits(p,t.decimals),e=n.formatUnits(a.O$.from(d.totalAmount).div(p),t.decimals);s.push({contractAddress:d.assetContract,quantityPerReward:r,totalRewards:e});break}case 1:i.push({contractAddress:d.assetContract,tokenId:d.tokenId.toString()});break;case 2:c.push({contractAddress:d.assetContract,tokenId:d.tokenId.toString(),quantityPerReward:p.toString(),totalRewards:a.O$.from(d.totalAmount).div(p).toString()})}}return{erc20Rewards:s,erc721Rewards:i,erc1155Rewards:c}}create=(0,g.f)(async t=>{let r=await this.contractWrapper.getSignerAddress();return this.createTo.prepare(r,t)});addPackContents=(0,g.f)(async(t,r)=>{let[e,a]=await Promise.all([this.contractWrapper.getSignerAddress(),q.parseAsync(r)]),{contents:n,numOfRewardUnits:s}=await this.toPackContentArgs(a);return g.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addPackContents",args:[t,n,s,e],parse:t=>{let r=this.contractWrapper.parseLogs("PackUpdated",t?.logs);if(0===r.length)throw Error("PackUpdated event not found");let e=r[0].args.packId;return{id:e,receipt:t,data:()=>this.erc1155.get(e)}}})});createTo=(0,g.f)(async(t,r)=>{let[e,a,n]=await Promise.all([(0,h.b)(r.packMetadata,this.storage),E.parseAsync(r),(0,d.aL)(t)]),{erc20Rewards:s,erc721Rewards:o,erc1155Rewards:i}=a,{contents:c,numOfRewardUnits:p}=await this.toPackContentArgs({erc20Rewards:s,erc721Rewards:o,erc1155Rewards:i});return g.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createPack",args:[c,p,e,a.openStartTime,a.rewardsPerPack,n],parse:t=>{let r=this.contractWrapper.parseLogs("PackCreated",t?.logs);if(0===r.length)throw Error("PackCreated event not found");let e=r[0].args.packId;return{id:e,receipt:t,data:()=>this.erc1155.get(e)}}})});open=(0,g.f)((()=>{var t=this;return async function(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;if(t._vrf)throw Error("This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead");return g.T.fromContractWrapper({contractWrapper:t.contractWrapper,method:"openPack",args:[r,e],overrides:{gasLimit:a},parse:async r=>{let e=t.contractWrapper.parseLogs("PackOpened",r?.logs);if(0===e.length)throw Error("PackOpened event not found");let a=e[0].args.rewardUnitsDistributed,s=[],i=[],c=[];for(let r of a)switch(r.tokenType){case 0:{let e=await (0,o.f)(t.contractWrapper.getProvider(),r.assetContract);s.push({contractAddress:r.assetContract,quantityPerReward:n.formatUnits(r.totalAmount,e.decimals).toString()});break}case 1:i.push({contractAddress:r.assetContract,tokenId:r.tokenId.toString()});break;case 2:c.push({contractAddress:r.assetContract,tokenId:r.tokenId.toString(),quantityPerReward:r.totalAmount.toString()})}return{erc20Rewards:s,erc721Rewards:i,erc1155Rewards:c}}})}})());async toPackContentArgs(t){let r=[],e=[],{erc20Rewards:n,erc721Rewards:s,erc1155Rewards:o}=t,d=this.contractWrapper.getProvider(),p=await this.contractWrapper.getSignerAddress();for(let t of n){let a=await (0,c.n)(d,t.quantityPerReward,t.contractAddress),n=a.mul(t.totalRewards),s=await (0,i.h)(this.contractWrapper,t.contractAddress,n);if(!s)throw Error(`ERC20 token with contract address "${t.contractAddress}" does not have enough allowance to transfer.

You can set allowance to the multiwrap contract to transfer these tokens by running:

await sdk.getToken("${t.contractAddress}").setAllowance("${this.getAddress()}", ${n});

`);e.push(t.totalRewards),r.push({assetContract:t.contractAddress,tokenType:0,totalAmount:n,tokenId:0})}for(let t of s){let a=await (0,u.i)(this.contractWrapper.getProvider(),this.getAddress(),t.contractAddress,t.tokenId,p);if(!a)throw Error(`ERC721 token "${t.tokenId}" with contract address "${t.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getNFTCollection("${t.contractAddress}").setApprovalForToken("${this.getAddress()}", ${t.tokenId});

`);e.push("1"),r.push({assetContract:t.contractAddress,tokenType:1,totalAmount:1,tokenId:t.tokenId})}for(let t of o){let n=await (0,u.i)(this.contractWrapper.getProvider(),this.getAddress(),t.contractAddress,t.tokenId,p);if(!n)throw Error(`ERC1155 token "${t.tokenId}" with contract address "${t.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getEdition("${t.contractAddress}").setApprovalForAll("${this.getAddress()}", true);

`);e.push(t.totalRewards),r.push({assetContract:t.contractAddress,tokenType:2,totalAmount:a.O$.from(t.quantityPerReward).mul(a.O$.from(t.totalRewards)),tokenId:t.tokenId})}return{contents:r,numOfRewardUnits:e}}async prepare(t,r,e){return g.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}detectVrf(){if((0,l.d)(this.contractWrapper,"PackVRF"))return new $(this.contractWrapper.getSignerOrProvider(),this.contractWrapper.address,this.storage,this.contractWrapper.options,this.chainId)}}}}]);